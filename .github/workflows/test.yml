name: Test

on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8"]
      fail-fast: false

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - uses: actions/cache@v2
        id: cache
        with:
          path: ${{ env.pythonLocation }}
          key: ${{ runner.os }}-python-${{ env.pythonLocation }}-${{ hashFiles('pyproject.toml') }}-test
      - name: Install Flit
        if: steps.cache.outputs.cache-hit != 'true'
        run: pip install flit
      - name: Install Dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: flit install --symlink
      - name: Lint
        if: ${{ matrix.python-version != '3.6' }}
        run: bash scripts/lint.sh
      - name: Test
        run: bash scripts/test.sh
      - name: Upload coverage
        uses: codecov/codecov-action@v1
  armv64_job:
      name: Build and Test for arm64
      runs-on: ubuntu-20.04
      steps:
        - uses: actions/checkout@v2
        - name: Set up QEMU
          id: qemu
          uses: docker/setup-qemu-action@v1
        - name: Install and Run tests
          run: |
            docker run --rm -v ${{ github.workspace }}:/ws:rw --workdir=/ws \
              arm64v8/ubuntu:20.04 \
              bash -exc 'apt-get update && apt-get -y install python3 python3-pip python3-venv curl && \
              python3 -m pip install virtualenv && python3 -m venv py38-venv && \
              source py38-venv/bin/activate && \
              pip install fastapi && \
              pip install flit && \
              bash scripts/lint.sh && \
              bash scripts/test.sh && \
              deactivate'
